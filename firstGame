using System;

namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int userPositionY = 1;
            int userPositionX = 1;
            int score = 0;
            char[,] map = {{'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'A', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#' },
                           {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#' } };

            while (score == 0)
            {
                GetDirection(ref map, ref userPositionX, ref userPositionY, ref score);
            }

            Console.WriteLine("U WON");
        }

        static void Move(char[,] map, ref int userPositionX, ref int userPositionY, int newUserPostionX, int newUserPositionY)
        {
            char wallSymbol = '#';
            char freeMapSpaceSymbol = ' ';

            if (map[newUserPositionY, newUserPostionX] != wallSymbol)
            {
                map[userPositionY, userPositionX] = freeMapSpaceSymbol;
                userPositionY = newUserPositionY;
                userPositionX = newUserPostionX;
            }
        }

        static void GetDirection(ref char[,] map, ref int userPositionX, ref int userPositionY, ref int score)
        {
            DrawMap(map, userPositionY, userPositionX);
            ConsoleKeyInfo key = Console.ReadKey();
            char wallSymbol = '#';
            char freeMapSpaceSymbol = ' ';
            const ConsoleKey UpKey = ConsoleKey.UpArrow;
            const ConsoleKey DownKey = ConsoleKey.DownArrow;
            const ConsoleKey RightKey = ConsoleKey.RightArrow;
            const ConsoleKey LeftKey = ConsoleKey.LeftArrow;
            int directionY = 0;
            int directionX = 0;

            switch (key.Key)
            {
                case UpKey:
                    directionY--;
                    Move(map, ref userPositionX, ref userPositionY, userPositionX, userPositionY - 1);
                    break;

                case DownKey:
                    directionY++;
                    Move(map, ref userPositionX, ref userPositionY, userPositionX, userPositionY + 1);
                    break;

                case RightKey:
                    directionX++;
                    Move(map, ref userPositionX, ref userPositionY, userPositionX + 1, userPositionY);
                    break;

                case LeftKey:
                    directionX--;
                    Move(map, ref userPositionX, ref userPositionY, userPositionX - 1, userPositionY);
                    break;
            }

            if (map[userPositionY, userPositionX] != wallSymbol || map[userPositionY, userPositionX] != freeMapSpaceSymbol)
            {
                score += GetItem(map[userPositionY, userPositionX]);
            }

            Console.Clear();
        }

        static int GetItem(char item)
        {
            char targetSymbol = 'A';

            if (item == targetSymbol)
            {
                return 1;
            }

            else
            {
                return 0;
            }
        }

        static void DrawMap(char[,] map, int userPositionY, int userPositionX)
        {
            char userSymbol = '@';
            map[userPositionY, userPositionX] = userSymbol;

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.Write("\n");
            }
        }
    }
}


//Добрый день! 

//1) PlayGame - переименуйте в GetDirection. В нем перед switch создайте 2 переменные направлений. 
//    Через switch значение соответствующей переменной меняется. Например,
//    если нажата UpKey, то directionY--. И из метода переменные возвращаете. 

//2) ChangeUserPosition - лучше назвать Move. В метод передаете направления 
//    новые и уже с ними работаете. Проверяете нет ли стены на новых координатах и 
//    смотрите есть ли монетка. 
